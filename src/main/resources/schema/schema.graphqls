type Query {

    ## Profile

    # TODO: Delete after dry run
    resourceApplicant: String
    resourceAdmin: String
    resourceEmployer: String
    resourceVisitor: String

    login(auth: AuthInput): Session

}

type Mutation {

    ## Auth
    registerUser(auth: AuthInput): Auth
    setUserRole(roleInput: RoleInput): Boolean


    ## Employer
    createJob(job: JobInput): Job
}


### Models
type Auth {

    id: ID

    email: String!

    password: String!

}

type Session {

    token: String!

    memberId: String!

}



### Input

input AuthInput {

    email: String!

    password: String!

}

input RoleInput {

    memberId: Int!

    role: UserRoles!
}

enum UserRoles {

    ROLE_ADMIN,

    ROLE_APPLICANT,

    ROLE_EMPLOYER,

    ROLE_VISITOR
}